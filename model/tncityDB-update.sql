ALTER TABLE Cuenta ADD valcomision DOUBLE PRECISION NULL;


CREATE SEQUENCE transacciones_idtransaccion_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE transacciones_idtransaccion_seq IS 'DbWrench Autogenerated Sequence.';



CREATE TABLE transacciones
(
	idtransaccion BIGINT DEFAULT nextval('public.transacciones_idtransaccion_seq'::regclass) NOT NULL,
	codtransaccion TEXT NULL,
	formapago TEXT NULL,
	franquicia TEXT NULL,
	descripcion TEXT NULL,
	referencia1 TEXT NULL,
	fechapago TEXT NULL,
	numerorecibo TEXT NULL,
	codigo BIGINT NULL,
	mensajeerror TEXT NULL,
	idrecaudo BIGINT NOT NULL,
	codigoint TEXT NULL
);

/* Add Primary Key */
ALTER TABLE transacciones ADD CONSTRAINT pktransacciones
	PRIMARY KEY (idtransaccion);

/* Add Comments */
COMMENT ON COLUMN transacciones.idtransaccion IS 'llave primaria que indica una transaccion exitosa';

COMMENT ON COLUMN transacciones.codtransaccion IS 'recibe el codigo de la transaccion';

COMMENT ON COLUMN transacciones.idrecaudo IS 'llave foranea proveniente del recaudo';

ALTER TABLE Recaudo ADD telefonosms TEXT NULL;

ALTER TABLE Recaudo ADD ciudad TEXT NULL;

ALTER TABLE transacciones ADD CONSTRAINT fk_transacciones_Recaudo
	FOREIGN KEY (idrecaudo) REFERENCES Recaudo (idrecaudo)
	ON UPDATE NO ACTION ON DELETE NO ACTION;


/* modificacion en base de datos 21-11-2019 */

/* Add Foreign Key: fk_Cuenta_PasarelaPago */

Alter table Cuenta add idpasarela INTEGER;

ALTER TABLE Cuenta ADD CONSTRAINT fk_Cuenta_PasarelaPago
	FOREIGN KEY (idpasarela) REFERENCES PasarelaPago (idpasarela)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Build Table Structure */

CREATE SEQUENCE Pasarelas_Configidpasarela_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE Pasarelas_Configidpasarela_seq IS 'DbWrench Autogenerated Sequence.';

CREATE TABLE Pasarelas
(
	Configidpasarela BIGINT DEFAULT nextval('public.Pasarelas_Configidpasarela_seq'::regclass) NOT NULL,
	config_id INTEGER NOT NULL,
	tipo VARCHAR NOT NULL,
	nombre VARCHAR NOT NULL,
	puerto VARCHAR NOT NULL,
	host VARCHAR NOT NULL,
	protocolo VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE Pasarelas ADD CONSTRAINT pkPasarelas
	PRIMARY KEY (Configidpasarela);


/* miercoles 4 de diciembre del 2019*/

CREATE SEQUENCE "indicativospaises_idindicativo_seq" INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE "indicativospaises_idindicativo_seq" IS 'DbWrench Autogenerated Sequence.';

/* Build Table Structure */
CREATE TABLE indicativospaises
(
	"idindicativo" INTEGER DEFAULT nextval('public."indicativospaises_idindicativo_seq"'::regclass) NOT NULL,
	idpais INTEGER NOT NULL,
        iddepartamento INTEGER NOT NULL,
        idciudad INTEGER NOT NULL,
	codindicativo TEXT NOT NULL
);

/* Add Primary Key */
ALTER TABLE indicativospaises ADD CONSTRAINT pkindicativospaises
	PRIMARY KEY ("idindicativo");

/* Add Comments */
COMMENT ON COLUMN indicativospaises."idindicativo" IS 'llave primaria';

COMMENT ON COLUMN indicativospaises.idpais IS 'codigo del pais';

COMMENT ON COLUMN indicativospaises.iddepartamento IS 'codigo del departamento';

COMMENT ON COLUMN indicativospaises.idciudad IS 'codigo del la ciudad';

COMMENT ON COLUMN indicativospaises.codindicativo IS 'indicativo';

/* Add Foreign Key: fk_indicativospaisee_departamentoestado */
ALTER TABLE indicativospaises ADD CONSTRAINT fk_indicativospaises_departamentoestado
	FOREIGN KEY (iddepartamento) REFERENCES departamentoestado (iddepartamento)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_indicativospaisee_pais */
ALTER TABLE indicativospaises ADD CONSTRAINT fk_indicativospaises_pais
	FOREIGN KEY (idpais) REFERENCES pais (idpais)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_indicativospaisee_pais */
ALTER TABLE indicativospaises ADD CONSTRAINT fk_indicativosciudad_ciudad
	FOREIGN KEY (idciudad) REFERENCES ciudad (idciudad)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* diciembre 13 del 2019*/

CREATE SEQUENCE "transmensajetexto_idmensajetxt_seq" INCREMENT BY 1;
COMMENT ON SEQUENCE "transmensajetexto_idmensajetxt_seq" IS 'DbWrench Autogenerated Sequence.';

/* Build Table Structure */
CREATE TABLE transmensajetexto
(
	"idmensajetxt" INTEGER DEFAULT nextval('public."transmensajetexto_idmensajetxt_seq"'::regclass) NOT NULL,
	status TEXT NOT NULL,
	cantidadmensajes TEXT NOT NULL,
	valor TEXT NOT NULL,
	cantidad_caracteres TEXT NOT NULL,
	mensaje TEXT NOT NULL,
	idconfirmacion TEXT NOT NULL,
	transaccionid INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE transmensajetexto ADD CONSTRAINT pktransmensajetexto
	PRIMARY KEY ("idmensajetxt");

/* Add Foreign Key: fk_transmensajetexto_transacciones */
ALTER TABLE transmensajetexto ADD CONSTRAINT fk_transmensajetexto_transacciones
	FOREIGN KEY (transaccionid) REFERENCES transacciones (idtransaccion)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE usuario ALTER COLUMN is_cambiarcontrasena SET NOT NULL;


/* enero 8 del 2020*/

CREATE SEQUENCE "parametrossms_Idparametro_seq" INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE "parametrossms_Idparametro_seq" IS 'DbWrench Autogenerated Sequence.';

/* Build Table Structure */
CREATE TABLE parametrossms
(
	"Idparametro" BIGINT DEFAULT nextval('public."parametrossms_Idparametro_seq"'::regclass) NOT NULL,
	host VARCHAR NOT NULL,
	puerto VARCHAR NOT NULL,
	protocolo VARCHAR NOT NULL,
	nombre VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE parametrossms ADD CONSTRAINT pkparametrossms
	PRIMARY KEY ("Idparametro");



/* 21/02/2020*/

/************ Add: Sequences ***************/

/* Autogenerated Sequences */

CREATE SEQUENCE "AUDITORIA_CODIGO_AU_seq" INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE "AUDITORIA_CODIGO_AU_seq" IS 'DbWrench Autogenerated Sequence.';




/************ Update: Tables ***************/

/******************** Add Table: "AUDITORIA" ************************/

/* Build Table Structure */
CREATE TABLE "AUDITORIA"
(
	"CODIGO_AU" INTEGER DEFAULT nextval('public."AUDITORIA_CODIGO_AU_seq"'::regclass) NOT NULL,
	"USUARIO_AU" VARCHAR NOT NULL,
	"TABLA" VARCHAR NOT NULL,
	"ACCION" VARCHAR NOT NULL,
	"REGISTRO" VARCHAR NOT NULL,
	"NOMBRE" VARCHAR NOT NULL,
	"DESCRIPCION" VARCHAR NOT NULL,
	"FECHA_HORA" VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE "AUDITORIA" ADD CONSTRAINT "pkAUDITORIA"
	PRIMARY KEY ("CODIGO_AU");


/* jueves 2 abril 2020 */

ALTER TABLE "pasarelapago" ADD  "comision" double precision;


UPDATE pasarelapago SET comision = '0' WHERE idpasarela = 1;
UPDATE pasarelapago SET comision = '0'  WHERE idpasarela = 2;
UPDATE pasarelapago SET comision = '1500'  WHERE idpasarela = 3;
INSERT INTO pasarelapago VALUES(nextval('pasarelapago_idpasarela_seq'),'tncolombnia','https://payzen.io/',now(),'-1','0');
INSERT INTO pasarelapago VALUES(nextval('pasarelapago_idpasarela_seq'),'payzen','https://payzen.io/',now(),'-1','0');

INSERT INTO pasarelapago VALUES(nextval('pasarelapago_idpasarela_seq'),'pagos inteligentes','https://pagosinteligentes.com/',now(),'-1','1500');


ALTER TABLE "recaudo" ADD  "pasareladia" char(50) ;
ALTER TABLE "recaudo" ADD  "valorcomision" double precision ;

/****Martes 30 junio 2020***/



CREATE SEQUENCE public.modulos_idmodulo_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.modulos_idmodulo_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.permisos_idpermiso_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.permisos_idpermiso_seq IS 'DbWrench Autogenerated Sequence.';


CREATE SEQUENCE public.secciones_idseccion_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.secciones_idseccion_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.subsecciones_idsubseccion_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.subsecciones_idsubseccion_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.moduloxseccionxsubseccion_idmodseccionsubseccion_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.moduloxseccionxsubseccion_idmodseccionsubseccion_seq IS 'DbWrench Autogenerated Sequence.';


CREATE SEQUENCE public.reportes_idreporte_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.reportes_idreporte_seq IS 'DbWrench Autogenerated Sequence.';

/******************** Add Table: public.modulos ************************/

/* Build Table Structure */
CREATE TABLE public.modulos
(
	idmodulo INTEGER DEFAULT nextval('public.modulos_idmodulo_seq'::regclass) NOT NULL,
	nombre VARCHAR NOT NULL,
	imagen VARCHAR NOT NULL,
	url VARCHAR NOT NULL,
	nombrevisual VARCHAR NOT NULL,
	estado BOOL NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.modulos ADD CONSTRAINT pkmodulos
	PRIMARY KEY (idmodulo);



/******************** Add Table: public.permisos ************************/

/* Build Table Structure */
CREATE TABLE public.permisos
(
	idpermiso INTEGER DEFAULT nextval('public.permisos_idpermiso_seq'::regclass) NOT NULL,
	idusuario INTEGER NOT NULL,
	idperfil INTEGER NOT NULL,
	idmodulo INTEGER NOT NULL,
	idseccion INTEGER NOT NULL,
	idsubsecccion INTEGER NOT NULL,
	consulta BOOL NOT NULL,
	ingreso BOOL NOT NULL,
	eliminacion BOOL NOT NULL,
	edicion BOOL NOT NULL,
	buscar BOOL NOT NULL,
        modulo BOOL NOT NULL,
        seccion BOOL NOT NULL,
        subseccion BOOL NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.permisos ADD CONSTRAINT pkpermisos
	PRIMARY KEY (idpermiso);


/******************** Add Table: public.secciones ************************/

/* Build Table Structure */
/* Build Table Structure */
CREATE TABLE public.secciones
(
	idseccion INTEGER DEFAULT nextval('public.secciones_idseccion_seq'::regclass) NOT NULL,
	nombre VARCHAR NOT NULL,
	nombrevisual VARCHAR NOT NULL,
	estado BOOL NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.secciones ADD CONSTRAINT pksecciones
	PRIMARY KEY (idseccion);


/******************** Add Table: public.subsecciones ************************/

/* Build Table Structure */
CREATE TABLE public.subsecciones
(
	idsubseccion INTEGER DEFAULT nextval('public.subsecciones_idsubseccion_seq'::regclass) NOT NULL,
	nombre VARCHAR NOT NULL,
	imagen VARCHAR NOT NULL,
	url VARCHAR NOT NULL,
	nombrevisual VARCHAR NOT NULL,
	estado BOOL NOT NULL
);


/* Add Primary Key */
ALTER TABLE public.subsecciones ADD CONSTRAINT pksubsecciones
	PRIMARY KEY (idsubseccion);

/******************** Add Table: public.moduloxseccionxsubseccion ************************/

/* Build Table Structure */
/* Build Table Structure */
CREATE TABLE public.moduloxseccionxsubseccion
(
        idmodseccionsubseccion INTEGER DEFAULT nextval('public.moduloxseccionxsubseccion_idmodseccionsubseccion_seq'::regclass) NOT NULL,
	idmodulo INTEGER NOT NULL,
	idseccion INTEGER NOT NULL,
	idsubseccion INTEGER NOT NULL
	
);

/* Add Primary Key */
ALTER TABLE public.moduloxseccionxsubseccion ADD CONSTRAINT pkmoduloxseccionxsubseccion
	PRIMARY KEY (idmodseccionsubseccion);



/* Add Foreign Key: fk_permisos_modulos */
ALTER TABLE public.permisos ADD CONSTRAINT fk_permisos_modulos
	FOREIGN KEY (idmodulo) REFERENCES public.modulos (idmodulo)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_permisos_perfil */
ALTER TABLE public.permisos ADD CONSTRAINT fk_permisos_perfil
	FOREIGN KEY (idperfil) REFERENCES public.perfil (idperfil)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_permisos_secciones */
ALTER TABLE public.permisos ADD CONSTRAINT fk_permisos_secciones
	FOREIGN KEY (idseccion) REFERENCES public.secciones (idseccion)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_permisos_subsecciones */
ALTER TABLE public.permisos ADD CONSTRAINT fk_permisos_subsecciones
	FOREIGN KEY (idsubsecccion) REFERENCES public.subsecciones (idsubseccion)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_permisos_usuario */
ALTER TABLE public.permisos ADD CONSTRAINT fk_permisos_usuario
	FOREIGN KEY (idusuario) REFERENCES public.usuario (idusuario)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_moduloxseccionxsubseccion_modulos */
ALTER TABLE public.moduloxseccionxsubseccion ADD CONSTRAINT fk_moduloxseccionxsubseccion_modulos
	FOREIGN KEY (idmodulo) REFERENCES public.modulos (idmodulo)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_moduloxseccionxsubseccion_secciones */
ALTER TABLE public.moduloxseccionxsubseccion ADD CONSTRAINT fk_moduloxseccionxsubseccion_secciones
	FOREIGN KEY (idseccion) REFERENCES public.secciones (idseccion)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_moduloxseccionxsubseccion_subsecciones */
ALTER TABLE public.moduloxseccionxsubseccion ADD CONSTRAINT fk_moduloxseccionxsubseccion_subsecciones
	FOREIGN KEY (idsubseccion) REFERENCES public.subsecciones (idsubseccion)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

ALTER TABLE recaudo ADD  numtransaccion character varying ;


ALTER TABLE recaudo ADD idusuario_created INTEGER;
ALTER TABLE recaudo ADD idusuario_updated INTEGER;


/* Build Table Structure */
CREATE TABLE public.reportes
(
	idreporte INTEGER DEFAULT nextval('public.reportes_idreporte_seq'::regclass) NOT NULL,
	nombre VARCHAR NOT NULL,
	imagen VARCHAR NOT NULL,
	url VARCHAR NOT NULL,
	nombrevisual VARCHAR NOT NULL,
	estado BOOL NOT NULL,
	created_at TIMESTAMP NOT NULL,
	idusuario INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.reportes ADD CONSTRAINT pkreportes
	PRIMARY KEY (idreporte);

/* Add Foreign Key: fk_reportes_usuario */
ALTER TABLE public.reportes ADD CONSTRAINT fk_reportes_usuario
	FOREIGN KEY (idusuario) REFERENCES public.usuario (idusuario)
	ON UPDATE NO ACTION ON DELETE NO ACTION;


/*11 de agosto 2020*/

CREATE SEQUENCE public.promocion_idpromocion_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.promocion_idpromocion_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.promociones_idpromociones_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.promociones_idpromociones_seq IS 'DbWrench Autogenerated Sequence.';


CREATE SEQUENCE public.recaudopromo_idrecpromocion_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.recaudopromo_idrecpromocion_seq IS 'DbWrench Autogenerated Sequence.';


/******************** Add Table: public.promocion ************************/

/* Build Table Structure */
CREATE TABLE public.promocion
(
	idpromocion INTEGER DEFAULT nextval('public.promocion_idpromocion_seq'::regclass) NOT NULL,
	nombre VARCHAR NOT NULL,
	estado BOOL NOT NULL,
	observacion TEXT NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.promocion ADD CONSTRAINT pkpromocion
	PRIMARY KEY (idpromocion)

/******************** Add Table: public.promociones ************************/

/* Build Table Structure */
CREATE TABLE public.promociones
(
	idpromociones INTEGER DEFAULT nextval('public.promociones_idpromociones_seq'::regclass) NOT NULL,
	idpromocion INTEGER NOT NULL,
	tipo_valor VARCHAR NOT NULL,
	valor_promocion VARCHAR NOT NULL,
	fecha_inicial DATE NOT NULL,
	fecha_final DATE NOT NULL,
	estado BOOL NOT NULL,
	cero BOOL NOT NULL,
	uno BOOL NOT NULL,
	dos BOOL NOT NULL,
	tres BOOL NOT NULL,
	cuatro BOOL NOT NULL,
	cinco BOOL NOT NULL,
	seis BOOL NOT NULL,
	siete BOOL NOT NULL,
	ocho BOOL NOT NULL,
	nueve BOOL NOT NULL,
	tipo_aplicadesde VARCHAR NOT NULL,
	aplicadesde VARCHAR NOT NULL,
	valoraplica VARCHAR NOT NULL,
	observacion TEXT NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.promociones ADD CONSTRAINT pkpromociones
	PRIMARY KEY (idpromociones);



/******************** Add Table: public.recaudopromo ************************/


/* Build Table Structure */
CREATE TABLE public.recaudopromo
(
	idrecpromocion INTEGER DEFAULT nextval('public.recaudopromo_idrecpromocion_seq'::regclass) NOT NULL,
	idpromociones INTEGER NOT NULL,
	idrecaudo BIGINT NOT NULL,
        promocion_finicial date,
        promocion_ffinal date
);

/* Add Primary Key */
ALTER TABLE public.recaudopromo ADD CONSTRAINT pkrecaudopromo
	PRIMARY KEY (idrecpromocion);


    /* Add Foreign Key: fk_promociones_promocion */
ALTER TABLE public.promociones ADD CONSTRAINT fk_promociones_promocion
FOREIGN KEY (idpromocion) REFERENCES public.promocion (idpromocion)
ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_promociones_recaudopromo */
ALTER TABLE public.recaudopromo
  ADD CONSTRAINT fk_promociones_recaudopromo FOREIGN KEY (idpromociones)
      REFERENCES public.promociones (idpromociones)
	ON UPDATE NO ACTION ON DELETE NO ACTION;


/* Add Foreign Key: fk_promociones_recaudo */
ALTER TABLE public.recaudopromo ADD CONSTRAINT fk_promociones_recaudo
	FOREIGN KEY (idrecaudo) REFERENCES public.recaudo (idrecaudo)
	ON UPDATE NO ACTION ON DELETE NO ACTION;




        ALTER TABLE recaudo ADD valorpromocion INTEGER;
        ALTER TABLE recaudo ADD promo character varying;
       ALTER TABLE benefactor ADD primerarecarga BOOL;


INSERT INTO public.permisos
(idpermiso, idusuario, idperfil, idmodulo, idseccion, idsubsecccion, consulta, ingreso, eliminacion, edicion, buscar, modulo, seccion, subseccion)
VALUES(nextval('permisos_idpermiso_seq'::regclass), 0, 1, 2, 8, 26, true, true, false, true, true, true, true, true);

INSERT INTO public.permisos
(idpermiso, idusuario, idperfil, idmodulo, idseccion, idsubsecccion, consulta, ingreso, eliminacion, edicion, buscar, modulo, seccion, subseccion)
VALUES(nextval('permisos_idpermiso_seq'::regclass), 2, 1, 2, 8, 26, true, true, false, true, true, true, true, true);



INSERT INTO public.promocion
(idpromocion ,nombre ,estado ,observacion  )
VALUES(nextval('promocion_idpromocion_seq'::regclass), 'Cliente Nuevo', false, 'Promocion por primera recarga');

INSERT INTO public.promocion
(idpromocion ,nombre ,estado ,observacion  )
VALUES(nextval('promocion_idpromocion_seq'::regclass), 'Cliente Frecuente', false, 'usuario que recarga más determinadas recargas __ se obsequiara un valor adicional de $__en determinada fecha _');

INSERT INTO public.promocion
(idpromocion ,nombre ,estado ,observacion  )
VALUES(nextval('promocion_idpromocion_seq'::regclass), 'Recargas Monto Especial', false, 'usuario que recarga más determinadas recargas __ se obsequiara un valor adicional de $__en determinada fecha _');

INSERT INTO public.promocion
(idpromocion ,nombre ,estado ,observacion  )
VALUES(nextval('promocion_idpromocion_seq'::regclass), 'Pico y placa', false, 'en determinado día _____ las cedulas de los usuario que terminen en determinado número ____ se obsequiara un valor de $_____');

INSERT INTO public.promocion
(idpromocion ,nombre ,estado ,observacion  )
VALUES(nextval('promocion_idpromocion_seq'::regclass), 'Recarga de choque', false, 'por recargas a determinado establecimiento penitenciario _______________ que sean iguales o superiores a determinado valor $_________ se obsequiara determinado valor $________ por determinado tiempo ____________');

INSERT INTO public.promocion
(idpromocion ,nombre ,estado ,observacion  )
VALUES(nextval('promocion_idpromocion_seq'::regclass), 'Recarga Día Calendario', false, '(Día de la mujer, día del hombre, día de la madre, día del padre, día del niño, navidad y fin de año)  Por recargas de un determinado valor $___ se obsequiara un valor $____ determinado por un día determinado ____');


/*16 de septiembre del 2020*/


CREATE OR REPLACE VIEW public.vista_recaudos AS 
 select 
                 recaudo.idrecaudo,
                 persona.nombres as nombre_familiar,
                 persona.apellidos as apellido_familiar,
               persona.tipodocumento as tipodocumento_familiar,
                 persona.numdocumento as numdocumento_familiar,
                persona.num_telefono as telefono_familiar,
                 persona.email  as correo_familar,
                 recaudo.idbeneficiario ,
                 beneficiario.td ,
                 beneficiario.pin ,
                beneficiario.nombres_apellidos ,
                recaudo.valor,
                recaudo.estado ,
                recaudo.log ,
                 recaudo.created_at,
                 recaudo.check_telefonia_at ,
                 recaudo.establecimiento ,
                 recaudo.cod_pago ,
                 recaudo.token_wtnpagos,
                 recaudo.idpasarela ,
                 recaudo.telefonosms,
                 recaudo.ciudad ,
                 recaudo.observacion ,
                 recaudo.observacion_adicional ,
                 recaudo.pasareladia ,
                recaudo.valorcomision ,
               recaudo.numtransaccion, 
                recaudo.valorpromocion, 
                  recaudo.promo
                 from recaudo 
                join benefactor on recaudo.idbenefactor = benefactor.idbenefactor
                 JOIN persona ON benefactor.idpersona = persona.idpersona
                 join beneficiario on recaudo.idbeneficiario = beneficiario.idbeneficiario
           
                 WHERE recaudo.idpasarela = 1 
                 order by 
                recaudo.idrecaudo ASC;

CREATE SEQUENCE public.beneficiarioNoExiste_idbeneficiarione_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.beneficiarioNoExiste_idbeneficiarione_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.repoauditoria_idrepoauditoria_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.repoauditoria_idrepoauditoria_seq IS 'DbWrench Autogenerated Sequence.';

/******************** Add Table: "public"."beneficiario_NoExiste" ************************/


/* Build Table Structure */
CREATE TABLE public.beneficiarioNoExiste
(
	idbeneficiarione BIGINT DEFAULT nextval('public."beneficiarioNoExiste_idbeneficiarione_seq"'::regclass) NOT NULL,
	td VARCHAR NOT NULL,
	pin VARCHAR NOT NULL,
	nombres_apellidos VARCHAR NOT NULL,
	idpersona BIGINT NOT NULL,
	update_at TIMESTAMP NOT NULL,
	idusuario_updated INTEGER NOT NULL,
	tariffgroupname INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.beneficiarioNoExiste ADD CONSTRAINT pkbeneficiarioNoExiste
	PRIMARY KEY (idbeneficiarione);


/******************** Add Table: public.repoauditoria ************************/

/* Build Table Structure */
/* Build Table Structure */
CREATE TABLE public.repoauditoria
(
	idrepoauditoria INTEGER DEFAULT nextval('public.repoauditoria_idrepoauditoria_seq'::regclass) NOT NULL,
	nombre VARCHAR NOT NULL,
	imagen VARCHAR NOT NULL,
	url VARCHAR NOT NULL,
	nombrevisual VARCHAR NOT NULL,
	estado BOOL NOT NULL,
	created_at TIMESTAMP NOT NULL,
	idusuario INTEGER NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.repoauditoria ADD CONSTRAINT pkrepoauditoria
	PRIMARY KEY (idrepoauditoria);

/* Add Foreign Key: fk_beneficiario_NoExiste_persona */
ALTER TABLE public.beneficiarioNoExiste ADD CONSTRAINT fk_beneficiario_NoExiste_persona
	FOREIGN KEY (idpersona) REFERENCES public.persona (idpersona)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_beneficiario_NoExiste_usuario */
ALTER TABLE public.beneficiarioNoExiste ADD CONSTRAINT fk_beneficiario_NoExiste_usuario
	FOREIGN KEY (idusuario_updated) REFERENCES public.usuario (idusuario)
	ON UPDATE NO ACTION ON DELETE NO ACTION;


/* Add Foreign Key: fk_beneficiarioNoExiste_ciudad */
ALTER TABLE public.beneficiarioNoExiste ADD CONSTRAINT fk_beneficiarioNoExiste_ciudad
	FOREIGN KEY (tariffgroupname) REFERENCES public.ciudad (idciudad)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

