<?xml version="1.0" encoding="UTF-8"?><Db flnm="tiendaDb" nm="tncityDB" ver="1.3.4">
  <VerLbl/>
  <VerNotes/>
  <DefTblOpts/>
  <DocFolder>\opt\tncityd\tncity\model</DocFolder>
  <Sch Cm="" nm="auditar">
    <Seq incr="1" nm="auditoria_CODIGO_AU_seq" start="1"/>
    <CustomTypes/>
  </Sch>
  <Sch Cm="standard public schema" nm="public">
    <Tbl UsSo="1" nm="barrio">
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idbarrio" nm="barrio_pkey"/>
      <Cl au="1" df="nextval('barrio_idbarrio_seq'::regclass)" nm="idbarrio" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="idlocalidad" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="codoficial" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="nombre" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="observaciones" nu="1">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="latitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="longitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Fk deAc="3" nm="fk_barrio_localidad" prLkCl="idlocalidad" upAc="3">
        <PrTb mn="0" nm="localidad" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="barrio" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idlocalidad" prCl="idlocalidad"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_barrio_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_barrio()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="beneficiario">
      <Cm>Registra los beneficiarios de las transacciones de recaudo</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idbeneficiario" nm="pkbeneficiario"/>
      <Cl au="1" df="nextval('beneficiario_idbeneficiario_seq'::regclass)" nm="idbeneficiario" nu="0">
        <DT arr="0" ds="BigInt" en="" id="-5" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="td" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Número de identificación penitenciaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="pin" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Número único de identificación ante el sistema telefónico de TN</Cm>
      </Cl>
      <Cl au="0" df="" nm="nombres_apellidos" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Nombres y apellidos del beneficiario en caso de que ID_PERSONA sea NULL</Cm>
      </Cl>
      <Cl au="0" df="" nm="idpersona" nu="1">
        <DT arr="0" ds="BigInt" en="" id="-5" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Persona que es beneficiaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="updated_at" nu="0">
        <DT arr="0" ds="TimeStamp" en="" id="93" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Fecha de actualización de registro</Cm>
      </Cl>
      <Cl au="0" df="" nm="idusuario_updated" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Usuario que actualiza el registro</Cm>
      </Cl>
      <Fk deAc="3" nm="fk_beneficiario_persona" prLkCl="idpersona" upAc="3">
        <PrTb mn="0" nm="persona" oe="1" sch="public" zr="1"/>
        <CdTb mn="1" nm="beneficiario" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idpersona" prCl="idpersona"/>
      </Fk>
      <Fk deAc="3" nm="fk_beneficiario_usuario" prLkCl="idusuario" upAc="3">
        <PrTb mn="0" nm="usuario" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="beneficiario" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idusuario_updated" prCl="idusuario"/>
      </Fk>
      <Idx clu="0" ftx="0" nm="beneficiario_pin_idx" spa="0" unq="1">
        <ClNs>pin</ClNs>
        <OptTx>USING btree</OptTx>
      </Idx>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_beneficiario_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_beneficiario()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="ciudad">
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idciudad" nm="ciudad_pkey"/>
      <Cl au="1" df="nextval('ciudad_idciudad_seq'::regclass)" nm="idciudad" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="nombre" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="codoficial" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="latitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="longitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="iddepartamento" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="codpostal" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Fk deAc="3" nm="fk_ciudad_departamentoestado" prLkCl="iddepartamento" upAc="3">
        <PrTb mn="0" nm="departamentoestado" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="ciudad" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="iddepartamento" prCl="iddepartamento"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_ciudad_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_ciudad()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="configuracion">
      <Cm>Registra los parámetros de configuración del sistema</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idparam" nm="configuracion_pkey"/>
      <Cl au="0" df="" nm="idparam" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="valor" nu="0">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="updated_at" nu="0">
        <DT arr="0" ds="TimeStamp" en="" id="93" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="idusuario_updated" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Fk deAc="3" nm="fk_configuracion_usuario" prLkCl="idusuario" upAc="3">
        <PrTb mn="0" nm="usuario" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="configuracion" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idusuario_updated" prCl="idusuario"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_configuracion_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_configuracion()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="departamentoestado">
      <Cm>Registra los departamentos o estados de los paises</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="iddepartamento" nm="departamentoestado_pkey"/>
      <Cl au="1" df="nextval('departamentoestado_iddepartamento_seq'::regclass)" nm="iddepartamento" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="idpais" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Pais al que pertenece</Cm>
      </Cl>
      <Cl au="0" df="" nm="codoficial" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Cod ificial del departamento</Cm>
      </Cl>
      <Cl au="0" df="" nm="nombre" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Nombre del departamento</Cm>
      </Cl>
      <Cl au="0" df="" nm="latitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Latitud del departamento</Cm>
      </Cl>
      <Cl au="0" df="" nm="longitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Longitud del departamento</Cm>
      </Cl>
      <Fk deAc="3" nm="fk_departamentoestado_pais" prLkCl="idpais" upAc="3">
        <PrTb mn="0" nm="pais" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="departamentoestado" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idpais" prCl="idpais"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_departamentoestado_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_departamentoestado()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="indicativospaises">
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idindicativo" nm="pkindicativospaises"/>
      <Cl au="1" df="nextval('indicativospaises_idindicativo_seq'::regclass)" nm="idindicativo" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="idpais" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>codigo del pais</Cm>
      </Cl>
      <Cl au="0" df="" nm="iddepartamento" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>codigo del departamento</Cm>
      </Cl>
      <Cl au="0" df="" nm="idciudad" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>codigo del la ciudad</Cm>
      </Cl>
      <Cl au="0" df="" nm="codindicativo" nu="0">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
        <Cm>indicativo</Cm>
      </Cl>
      <Cl au="0" df="" nm="codarea" nu="1">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Fk deAc="3" nm="fk_indicativosciudad_ciudad" prLkCl="idciudad" upAc="3">
        <PrTb mn="0" nm="ciudad" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="indicativospaises" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idciudad" prCl="idciudad"/>
      </Fk>
      <Fk deAc="3" nm="fk_indicativospaises_departamentoestado" prLkCl="iddepartamento" upAc="3">
        <PrTb mn="0" nm="departamentoestado" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="indicativospaises" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="iddepartamento" prCl="iddepartamento"/>
      </Fk>
      <Fk deAc="3" nm="fk_indicativospaises_pais" prLkCl="idpais" upAc="3">
        <PrTb mn="0" nm="pais" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="indicativospaises" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idpais" prCl="idpais"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_indicativospaises_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_indicativospaises()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="localidad">
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idlocalidad" nm="localidad_pkey"/>
      <Cl au="1" df="nextval('localidad_idlocalidad_seq'::regclass)" nm="idlocalidad" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="idciudad" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="codoficial" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="nombre" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="observaciones" nu="1">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="latitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="longitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Fk deAc="3" nm="fk_localidad_ciudad" prLkCl="idciudad" upAc="3">
        <PrTb mn="0" nm="ciudad" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="localidad" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idciudad" prCl="idciudad"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_localidad_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_localidad()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="notificacion">
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idnotificacion" nm="pknotificacion"/>
      <Cl au="1" df="nextval('notificacion_idnotificacion_seq'::regclass)" nm="idnotificacion" nu="0">
        <DT arr="0" ds="BigInt" en="" id="-5" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="config_id" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="tipo" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="email" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="email_asunto" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="email_contenido" nu="1">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="sms_content" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="sms_numcel" nu="1">
        <DT arr="0" ds="Numeric" en="" id="2" ln="15" sc="0" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="created_at" nu="0">
        <DT arr="0" ds="TimeStamp" en="" id="93" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_notificacion_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_notificacion()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="pais">
      <Cm>Se registran los paises</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idpais" nm="pais_pkey"/>
      <Cl au="1" df="nextval('pais_idpais_seq'::regclass)" nm="idpais" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="nombre" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Nombre del país</Cm>
      </Cl>
      <Cl au="0" df="" nm="cod_oficial_iso" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Cód oficial ISO</Cm>
      </Cl>
      <Cl au="0" df="" nm="iso2" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>ISO 2</Cm>
      </Cl>
      <Cl au="0" df="" nm="iso3" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>ISO 3</Cm>
      </Cl>
      <Cl au="0" df="" nm="latitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Latitud</Cm>
      </Cl>
      <Cl au="0" df="" nm="longitud" nu="1">
        <DT arr="0" ds="Double" en="" id="8" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Longitud</Cm>
      </Cl>
      <Cl au="0" df="" nm="codpostal" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_pais_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_pais()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="parametrossms">
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="Idparametro" nm="pkparametrossms"/>
      <Cl au="1" df="nextval('&quot;parametrossms_Idparametro_seq&quot;'::regclass)" nm="Idparametro" nu="0">
        <DT arr="0" ds="BigInt" en="" id="-5" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="host" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="puerto" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="protocolo" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="nombre" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_parametrossms_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_parametrossms()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="perfil">
      <Cm>Registra los perfiles del sistema</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idperfil" nm="perfil_pkey"/>
      <Cl au="1" df="nextval('perfil_idperfil_seq'::regclass)" nm="idperfil" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="nombre" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="observaciones" nu="1">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_perfil_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_perfil()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="perfil_funcionalidad">
      <Cm>Registra las funcionalidades de un perfil</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idpf" nm="perfil_funcionalidad_pkey"/>
      <Cl au="0" df="" nm="idpf" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="funcionalidad_id" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Id. la funcionalidad que pertenece al perfil</Cm>
      </Cl>
      <Cl au="0" df="" nm="idperfil" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Perfil al que pertenece la funcionalidad</Cm>
      </Cl>
      <Fk deAc="3" nm="fk_perfil_funcionalidad_perfil" prLkCl="idperfil" upAc="3">
        <PrTb mn="0" nm="perfil" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="perfil_funcionalidad" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idperfil" prCl="idperfil"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_perfilfuncionalidad_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_perfil_funcionalidad()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="perfil_has_usuario">
      <Cm>Registro los perfiles a los que pertenece un usuario</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idpu" nm="perfil_has_usuario_pkey"/>
      <Cl au="0" df="" nm="idpu" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="idperfil" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Perfil que se relaciona con el usuario</Cm>
      </Cl>
      <Cl au="0" df="" nm="idusuario" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Usuario que tiene el perfil</Cm>
      </Cl>
      <Fk deAc="3" nm="fk_perfil_has_usuario_perfil" prLkCl="idperfil" upAc="3">
        <PrTb mn="0" nm="perfil" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="perfil_has_usuario" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idperfil" prCl="idperfil"/>
      </Fk>
      <Fk deAc="3" nm="fk_perfil_has_usuario_usuario" prLkCl="idusuario" upAc="3">
        <PrTb mn="0" nm="usuario" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="perfil_has_usuario" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idusuario" prCl="idusuario"/>
      </Fk>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_perfilhasusuario_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_perfil_has_usuario()</Sql>
      </Trg>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="persona">
      <Cm>Registra todas las personas que tienen que ver con el sistema de una u otra forma.</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idpersona" nm="pkpersona"/>
      <Cl au="1" df="nextval('persona_idpersona_seq'::regclass)" nm="idpersona" nu="0">
        <DT arr="0" ds="BigInt" en="" id="-5" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="nombres" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Primer y segundo nombre</Cm>
      </Cl>
      <Cl au="0" df="" nm="apellidos" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Primer y segundo apellido</Cm>
      </Cl>
      <Cl au="0" df="" nm="tipodocumento" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Tipo de documento de identidad</Cm>
      </Cl>
      <Cl au="0" df="" nm="numdocumento" nu="0">
        <DT arr="0" ds="Numeric" en="" id="2" ln="20" sc="0" sg="1" un="0"/>
        <Cm>Número de documento de identidad</Cm>
      </Cl>
      <Cl au="0" df="" nm="num_telefono" nu="1">
        <DT arr="0" ds="Numeric" en="" id="2" ln="15" sc="0" sg="1" un="0"/>
        <Cm>Número de teléfono</Cm>
      </Cl>
      <Cl au="0" df="" nm="email" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Correo electrónico</Cm>
      </Cl>
      <Cl au="0" df="" nm="direccion" nu="1">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Dirección de residencia</Cm>
      </Cl>
      <Cl au="0" df="" nm="idusuario_updated" nu="1">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Usuario que actualiza el registro</Cm>
      </Cl>
      <Cl au="0" df="" nm="updated_at" nu="0">
        <DT arr="0" ds="TimeStamp" en="" id="93" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Fecha de actualización</Cm>
      </Cl>
      <Cl au="0" df="" nm="idusuario_created" nu="1">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Usuario que crea el registro</Cm>
      </Cl>
      <Cl au="0" df="" nm="created_at" nu="0">
        <DT arr="0" ds="TimeStamp" en="" id="93" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Fecha de creación de registro</Cm>
      </Cl>
      <Cl au="0" df="" nm="num_telefono2" nu="1">
        <DT arr="0" ds="Numeric" en="" id="2" ln="10" sc="0" sg="1" un="0"/>
        <Cm>Teléfono 2</Cm>
      </Cl>
      <Cl au="0" df="" nm="idciudad" nu="1">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="imagen" nu="1">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Fk deAc="3" nm="fk_persona_idciudad" prLkCl="idciudad" upAc="3">
        <PrTb mn="0" nm="ciudad" oe="1" sch="public" zr="1"/>
        <CdTb mn="1" nm="persona" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idciudad" prCl="idciudad"/>
      </Fk>
      <Fk deAc="3" nm="fk_persona_usuario_created" prLkCl="idusuario" upAc="3">
        <PrTb mn="0" nm="usuario" oe="1" sch="public" zr="1"/>
        <CdTb mn="1" nm="persona" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idusuario_created" prCl="idusuario"/>
      </Fk>
      <Fk deAc="3" nm="fk_persona_usuario_updated" prLkCl="idusuario" upAc="3">
        <PrTb mn="0" nm="usuario" oe="1" sch="public" zr="1"/>
        <CdTb mn="1" nm="persona" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idusuario_updated" prCl="idusuario"/>
      </Fk>
      <Idx clu="0" ftx="0" nm="persona_numdocumento_uniq" spa="0" unq="1">
        <ClNs>numdocumento</ClNs>
        <OptTx>USING btree</OptTx>
      </Idx>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_persona_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_persona()</Sql>
      </Trg>
      <UniqueConstraints>
        <UnCon nm="persona_numdocumento_key">
          <ClNs>numdocumento</ClNs>
        </UnCon>
      </UniqueConstraints>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="promocionxrecaudo">
      <TblOpts/>
      <Pk ClNs="idpromorecaudo" nm="pkpromocionxrecaudo"/>
      <Cl au="1" df="" nm="idpromorecaudo" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="idrecaudo" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="idpromocion" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Cl au="0" df="" nm="idbenefactor" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="promorecaudobenefactor">
      <TblOpts/>
      <UniqueConstraints/>
      <SchTrHis/>
    </Tbl>
    <Tbl UsSo="1" nm="usuario">
      <Cm>Registra los usuarios que tienen acceso al sistema</Cm>
      <TblOpts>WITHOUT OIDS</TblOpts>
      <Pk ClNs="idusuario" nm="usuario_pkey"/>
      <Cl au="1" df="nextval('usuario_idusuario_seq'::regclass)" nm="idusuario" nu="0">
        <DT arr="0" ds="Integer" en="" id="4" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Llave primaria</Cm>
      </Cl>
      <Cl au="0" df="" nm="idpersona" nu="0">
        <DT arr="0" ds="BigInt" en="" id="-5" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Persona que es usuario</Cm>
      </Cl>
      <Cl au="0" df="" nm="username" nu="0">
        <DT arr="0" ds="VarChar" en="" id="12" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Login</Cm>
      </Cl>
      <Cl au="0" df="" nm="contrasena" nu="0">
        <DT arr="0" ds="Text" en="" id="703" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Contraseña de acceso</Cm>
      </Cl>
      <Cl au="0" df="" nm="updated_at" nu="0">
        <DT arr="0" ds="TimeStamp" en="" id="93" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Fecha de actualización</Cm>
      </Cl>
      <Cl au="0" df="" nm="is_activo" nu="0">
        <DT arr="0" ds="Boolean" en="" id="16" ln="null" sc="null" sg="1" un="0"/>
        <Cm>Indica si esta o no activo el usuario</Cm>
      </Cl>
      <Cl au="0" df="" nm="is_cambiarcontrasena" nu="1">
        <DT arr="0" ds="Boolean" en="" id="16" ln="null" sc="null" sg="1" un="0"/>
      </Cl>
      <Fk deAc="3" nm="fk_usuario_persona" prLkCl="idpersona" upAc="3">
        <PrTb mn="0" nm="persona" oe="1" sch="public" zr="0"/>
        <CdTb mn="1" nm="usuario" oe="0" sch="public" zr="1"/>
        <ClPr cdCl="idpersona" prCl="idpersona"/>
      </Fk>
      <Idx clu="0" ftx="0" nm="usuario_idpersona_idx" spa="0" unq="1">
        <ClNs>idpersona</ClNs>
        <OptTx>USING btree</OptTx>
      </Idx>
      <Idx clu="0" ftx="0" nm="usuario_username_uniq" spa="0" unq="1">
        <ClNs>username</ClNs>
        <OptTx>USING btree</OptTx>
      </Idx>
      <Trg del="1" eaRow="1" exBe="0" ins="1" nm="tbl_usuario_tb_auditoria" upd="1">
        <Sql>public.fn_log_audit_usuario()</Sql>
      </Trg>
      <UniqueConstraints>
        <UnCon nm="usuario_idpersona_key">
          <ClNs>idpersona</ClNs>
        </UnCon>
        <UnCon nm="usuario_username_key">
          <ClNs>username</ClNs>
        </UnCon>
      </UniqueConstraints>
      <SchTrHis/>
    </Tbl>
    <Proc nm="crea_primary_perfil_funcionalidad()">
      <src>CREATE OR REPLACE FUNCTION public.crea_primary_perfil_funcionalidad() 
  RETURNS trigger AS 
$$
BEGIN
	NEW.idpf:=NEW.idperfil||'_'||NEW.funcionalidad_id;--Concatenado
	RETURN NEW;
END;
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="crea_primary_perfil_has_usuario()">
      <src>CREATE OR REPLACE FUNCTION public.crea_primary_perfil_has_usuario() 
  RETURNS trigger AS 
$$
BEGIN
	NEW.idpu:=NEW.idperfil||'_'||NEW.idusuario;--Concatenado
	RETURN NEW;
END;
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_barrio()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_barrio() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_benefactor()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_benefactor() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_beneficiario()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_beneficiario() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_ciudad()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_ciudad() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_configuracion()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_configuracion() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_cuenta()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_cuenta() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_cuentamovimiento()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_cuentamovimiento() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_departamentoestado()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_departamentoestado() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_indicativospaises()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_indicativospaises() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_informex_histo()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_informex_histo() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_informex_permiso()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_informex_permiso() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_localidad()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_localidad() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_moneda()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_moneda() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_notificacion()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_notificacion() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_pais()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_pais() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_parametrossms()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_parametrossms() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_pasarelapago()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_pasarelapago() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_pasarelas()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_pasarelas() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_perfil()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_perfil() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_perfil_funcionalidad()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_perfil_funcionalidad() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_perfil_has_usuario()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_perfil_has_usuario() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_persona()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_persona() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_recaudo()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_recaudo() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_transacciones()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_transacciones() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_transmensajetexto()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_transmensajetexto() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <Proc nm="fn_log_audit_usuario()">
      <src>CREATE OR REPLACE FUNCTION public.fn_log_audit_usuario() 
  RETURNS trigger AS 
$$
begin
IF(TG_OP = 'DELETE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'D', row_to_json(OLD.*),NULL,NOW(),USER);
RETURN OLD;
ELSEIF (TG_OP = 'UPDATE') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'U',row_to_json(OLD.*),row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
ELSEIF(TG_OP = 'INSERT') THEN
INSERT INTO auditar.AUDITORIA ("NombreTabla","Operacion","ValorAnterior","NuevoValor","UpdateDate","USUARIO")
VALUES (TG_TABLE_NAME,'I',NULL,row_to_json(NEW.*),NOW(),USER);
RETURN NEW;
END IF;
RETURN NULL;
end
$$
  LANGUAGE plpgsql VOLATILE 
  COST 100;</src>
    </Proc>
    <View nm="vista_recargas_tnpagos">
      <Sql>SELECT
    recaudo.idrecaudo AS idvista,
    persona.nombres,
    persona.apellidos,
    persona.tipodocumento AS tipo_documento,
    persona.numdocumento AS numero_documento,
    persona.num_telefono,
    persona.email,
    persona.direccion,
    ciudad.nombre AS ciudad_familiar,
    departamentoestado.nombre AS departamento_familiar,
    pais.nombre AS pais_familiar,
    beneficiario.td AS tipodocumento_ppl,
    beneficiario.pin AS numero_documento_ppl,
    beneficiario.nombres_apellidos AS nombre_ppl,
    recaudo.idrecaudo,
    recaudo.valor,
    recaudo.estado,
    recaudo.log,
    recaudo.created_at,
    recaudo.check_telefonia_at,
    recaudo.establecimiento,
    recaudo.cod_pago,
    recaudo.telefonosms,
    recaudo.observacion,
    recaudo.observacion_adicional,
    recaudo.ciudad AS ciudad_ppl,
    pasarelapago.nombre AS nombre_pasarela,
    transacciones.codtransaccion,
    transacciones.formapago,
    transacciones.franquicia,
    transacciones.descripcion,
    transacciones.referencia1,
    transacciones.fechapago,
    transacciones.numerorecibo,
    transacciones.codigo,
    transacciones.mensajeerror
FROM recaudo
    JOIN benefactor ON recaudo.idbenefactor = benefactor.idbenefactor
    JOIN beneficiario ON recaudo.idbeneficiario = beneficiario.idbeneficiario
    JOIN persona ON benefactor.idpersona = persona.idpersona
    JOIN ciudad ON persona.idciudad = ciudad.idciudad
    JOIN departamentoestado ON ciudad.iddepartamento = departamentoestado.iddepartamento
    JOIN pais ON departamentoestado.idpais = pais.idpais
    JOIN pasarelapago ON recaudo.idpasarela = pasarelapago.idpasarela
    JOIN transacciones ON recaudo.idrecaudo = transacciones.idrecaudo
WHERE recaudo.idpasarela = 1</Sql>
    </View>
    <View nm="vista_recargas_webservices">
      <Sql>SELECT
    recaudo.idrecaudo AS idvista,
    persona.nombres,
    persona.apellidos,
    persona.tipodocumento AS tipo_documento,
    persona.numdocumento AS numero_documento,
    persona.num_telefono,
    persona.email,
    persona.direccion,
    ciudad.nombre AS ciudad_familiar,
    departamentoestado.nombre AS departamento_familiar,
    pais.nombre AS pais_familiar,
    beneficiario.td AS tipodocumento_ppl,
    beneficiario.pin AS numero_documento_ppl,
    beneficiario.nombres_apellidos AS nombre_ppl,
    recaudo.idrecaudo,
    recaudo.valor,
    recaudo.estado,
    recaudo.log,
    recaudo.created_at,
    recaudo.check_telefonia_at,
    recaudo.establecimiento,
    recaudo.cod_pago,
    recaudo.telefonosms,
    recaudo.observacion,
    recaudo.observacion_adicional,
    recaudo.ciudad AS ciudad_ppl,
    pasarelapago.nombre AS nombre_pasarela,
    transacciones.codtransaccion,
    transacciones.formapago,
    transacciones.franquicia,
    transacciones.descripcion,
    transacciones.referencia1,
    transacciones.fechapago,
    transacciones.numerorecibo,
    transacciones.codigo,
    transacciones.mensajeerror
FROM recaudo
    JOIN benefactor ON recaudo.idbenefactor = benefactor.idbenefactor
    JOIN beneficiario ON recaudo.idbeneficiario = beneficiario.idbeneficiario
    JOIN persona ON benefactor.idpersona = persona.idpersona
    JOIN ciudad ON persona.idciudad = ciudad.idciudad
    JOIN departamentoestado ON ciudad.iddepartamento = departamentoestado.iddepartamento
    JOIN pais ON departamentoestado.idpais = pais.idpais
    JOIN pasarelapago ON recaudo.idpasarela = pasarelapago.idpasarela
    JOIN transacciones ON recaudo.idrecaudo = transacciones.idrecaudo
WHERE recaudo.idpasarela &lt;&gt; 1</Sql>
    </View>
    <Seq incr="1" nm="AUDITORIA_CODIGO_AU_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="barrio_idbarrio_seq" start="1"/>
    <Seq incr="1" nm="benefactor_idbenefactor_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="beneficiario_idbeneficiario_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="ciudad_idciudad_seq" start="1"/>
    <Seq incr="1" nm="cuenta_idcuenta_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="cuentamovimiento_idmovimiento_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="departamentoestado_iddepartamento_seq" start="1"/>
    <Seq incr="1" nm="estadisticas_idestadistica_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="indicativospaises_Idindicativo_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="informes_idinforme_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="informes_Idinformes_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="informex_detalle_ididetalle_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="informex_histo_idinformexhisto_seq" start="1"/>
    <Seq incr="1" nm="informex_permiso_idpermiso_seq" start="1"/>
    <Seq incr="1" nm="localidad_idlocalidad_seq" start="1"/>
    <Seq incr="1" nm="moneda_idmoneda_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="notificacion_idnotificacion_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="pais_idpais_seq" start="1"/>
    <Seq incr="1" nm="parametrossms_Idparametro_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="pasarelapago_idpasarela_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="pasarelas_configidpasarela_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="perfil_idperfil_seq" start="1"/>
    <Seq incr="1" nm="persona_idpersona_seq" start="1"/>
    <Seq incr="1" nm="recaudo_idrecaudo_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="transacciones_idtransaccion_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="transmensajetexto_Idmensajetxt_seq" start="1">
      <Cm>DbWrench Autogenerated Sequence.</Cm>
    </Seq>
    <Seq incr="1" nm="usuario_idusuario_seq" start="1"/>
    <CustomTypes/>
  </Sch>
  <Dgm nm="diagramA">
    <RnCf ClkAct="true" FtSz="12" lkStgy="RightAngleStrategy" zm="1.0">
      <VbCfg>
        <Fg ky="Auto Number" vl="0"/>
        <Fg ky="Check" vl="0"/>
        <Fg ky="Comment" vl="0"/>
        <Fg ky="Data Type" vl="1"/>
        <Fg ky="Default" vl="0"/>
        <Fg ky="ENUM Values" vl="0"/>
        <Fg ky="Length" vl="1"/>
        <Fg ky="Name" vl="1"/>
        <Fg ky="Nullable" vl="0"/>
        <Fg ky="Schema Name" vl="0"/>
        <Fg ky="Signed" vl="0"/>
      </VbCfg>
    </RnCf>
    <DiaProps>
      <Show AllCols="1" FkCols="1" FkNms="1" PkCols="1"/>
      <ErNotation>BarkerErNotation</ErNotation>
      <DbTableRectangleFill>HeaderFooterFill</DbTableRectangleFill>
      <svg path=""/>
    </DiaProps>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="barrio" x="772" y="798"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="ciudad" x="921" y="210"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="configuracion" x="1644" y="451"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="departamentoestado" x="568" y="293"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="indicativospaises" x="747" y="33"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="localidad" x="337" y="692"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="notificacion" x="4168" y="50"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="pais" x="391" y="43"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="parametrossms" x="3884" y="251"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="perfil" x="1052" y="802"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="perfil_funcionalidad" x="1040" y="605"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="perfil_has_usuario" x="1356" y="683"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="persona" x="1461" y="50"/>
    <TbGl bkCl="ff4c78ff" sch="public" tbl="usuario" x="1922" y="50"/>
    <FkGl bkCl="ff000000" childEdge="WEST" nm="public.barrio.fk_barrio_localidad" parentEdge="EAST" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="570" x2="772" y1="841" y2="841"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="WEST" nm="public.ciudad.fk_ciudad_departamentoestado" parentEdge="EAST" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="811" x2="921" y1="298" y2="298"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="EAST" nm="public.configuracion.fk_configuracion_usuario" parentEdge="SOUTH" positioner="TwoLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="PARENT_LINE" x1="2045" x2="2045" y1="204" y2="500"/>
        <positionableLine lineRole="CHILD_LINE" x1="1913" x2="2041" y1="504" y2="504"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="NORTH" nm="public.departamentoestado.fk_departamentoestado_pais" parentEdge="SOUTH" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="619" x2="619" y1="213" y2="293"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="EAST" nm="public.indicativospaises.fk_indicativosciudad_ciudad" parentEdge="NORTH" positioner="TwoLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="PARENT_LINE" x1="1151" x2="1151" y1="210" y2="170"/>
        <positionableLine lineRole="CHILD_LINE" x1="976" x2="1147" y1="166" y2="166"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="WEST" nm="public.indicativospaises.fk_indicativospaises_departamentoestado" parentEdge="NORTH" positioner="TwoLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="PARENT_LINE" x1="689" x2="689" y1="293" y2="170"/>
        <positionableLine lineRole="CHILD_LINE" x1="747" x2="693" y1="166" y2="166"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="WEST" nm="public.indicativospaises.fk_indicativospaises_pais" parentEdge="EAST" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="624" x2="747" y1="114" y2="114"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="EAST" nm="public.localidad.fk_localidad_ciudad" parentEdge="SOUTH" positioner="TwoLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="PARENT_LINE" x1="1137" x2="1137" y1="364" y2="693"/>
        <positionableLine lineRole="CHILD_LINE" x1="570" x2="1133" y1="697" y2="697"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="SOUTH" nm="public.perfil_funcionalidad.fk_perfil_funcionalidad_perfil" parentEdge="NORTH" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="1057" x2="1057" y1="802" y2="695"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="SOUTH" nm="public.perfil_has_usuario.fk_perfil_has_usuario_perfil" parentEdge="EAST" positioner="TwoLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="PARENT_LINE" x1="1285" x2="1357" y1="859" y2="859"/>
        <positionableLine lineRole="CHILD_LINE" x1="1361" x2="1361" y1="773" y2="855"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="EAST" nm="public.perfil_has_usuario.fk_perfil_has_usuario_usuario" parentEdge="SOUTH" positioner="TwoLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="PARENT_LINE" x1="2004" x2="2004" y1="204" y2="679"/>
        <positionableLine lineRole="CHILD_LINE" x1="1556" x2="2000" y1="683" y2="683"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="WEST" nm="public.persona.fk_persona_idciudad" parentEdge="EAST" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="1164" x2="1461" y1="328" y2="328"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="EAST" nm="public.persona.fk_persona_usuario_created" parentEdge="WEST" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="1922" x2="1753" y1="127" y2="127"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="EAST" nm="public.persona.fk_persona_usuario_updated" parentEdge="WEST" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="1922" x2="1753" y1="127" y2="127"/>
      </positionableLines>
    </FkGl>
    <FkGl bkCl="ff000000" childEdge="WEST" nm="public.usuario.fk_usuario_persona" parentEdge="EAST" positioner="OneLineUserLinkPositioner">
      <positionableLines>
        <positionableLine lineRole="SINGLE_LINE" x1="1753" x2="1922" y1="127" y2="127"/>
      </positionableLines>
    </FkGl>
    <Notes/>
    <Zones/>
  </Dgm>
  <RnmMgr>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="modulos" SupCls="Schema" SupNme="public">
      <Rnm nNm="idmodulo" oNm="Idmodulo"/>
      <Rnm nNm="Idmodulo" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="secciones" SupCls="Schema" SupNme="public">
      <Rnm nNm="idseccion" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="subsecciones" SupCls="Schema" SupNme="public">
      <Rnm nNm="idsubseccion" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Table" ParCls="Schema" ParNme="public" SupCls="" SupNme="">
      <Rnm nNm="permisos" oNm="perfilusuario"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="permisos" SupCls="Schema" SupNme="public">
      <Rnm nNm="idpermiso" oNm="idperniso"/>
      <Rnm nNm="idperniso" oNm="idperfilusuario"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="permisos" SupCls="Schema" SupNme="public">
      <Rnm nNm="idusuario" oNm="idusuarios"/>
      <Rnm nNm="idusuarios" oNm="idperfil"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="permisos" SupCls="Schema" SupNme="public">
      <Rnm nNm="idperfil" oNm="idusuario"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="permisos" SupCls="Schema" SupNme="public">
      <Rnm nNm="idseccion" oNm="idsubmodulo"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="moduloxseccionxsubseccion" SupCls="Schema" SupNme="public">
      <Rnm nNm="idmodulo" oNm="Idmodulo"/>
      <Rnm nNm="Idmodulo" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="informes" SupCls="Schema" SupNme="public">
      <Rnm nNm="estado" oNm="pdf"/>
    </RnmCh>
    <RnmCh ObjCls="Table" ParCls="Schema" ParNme="public" SupCls="" SupNme="">
      <Rnm nNm="informes" oNm="reportes"/>
      <Rnm nNm="reportes" oNm="informes"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="reportes" SupCls="Schema" SupNme="public">
      <Rnm nNm="idreporte" oNm="Idreporte"/>
      <Rnm nNm="Idreporte" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="promociones" SupCls="Schema" SupNme="public">
      <Rnm nNm="idpromocion" oNm="Idpromocion"/>
      <Rnm nNm="Idpromocion" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Table" ParCls="Schema" ParNme="public" SupCls="" SupNme="">
      <Rnm nNm="promorecaudobenefactor" oNm="promocionesbenefactor"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="promorecaudobenefactor" SupCls="Schema" SupNme="public">
      <Rnm nNm="Idpromrecben" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="recaudopromo" SupCls="Schema" SupNme="public">
      <Rnm nNm="idrecpromocion" oNm="Idrecpromocion"/>
      <Rnm nNm="Idrecpromocion" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="promocion" SupCls="Schema" SupNme="public">
      <Rnm nNm="idpromocion" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="promociones" SupCls="Schema" SupNme="public">
      <Rnm nNm="idpromociones" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="recaudopromo" SupCls="Schema" SupNme="public">
      <Rnm nNm="idpromociones" oNm="idpromocion"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="repoauditoria" SupCls="Schema" SupNme="public">
      <Rnm nNm="idrepoauditoria" oNm="Idrepoauditoria"/>
      <Rnm nNm="Idrepoauditoria" oNm="Idreporrecaudos"/>
      <Rnm nNm="Idreporrecaudos" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Table" ParCls="Schema" ParNme="public" SupCls="" SupNme="">
      <Rnm nNm="repoauditoria" oNm="reporecaudos"/>
    </RnmCh>
    <RnmCh ObjCls="Column" ParCls="Table" ParNme="beneficiarioNoExiste" SupCls="Schema" SupNme="public">
      <Rnm nNm="idbeneficiarione" oNm="Idbeneficiarione"/>
      <Rnm nNm="Idbeneficiarione" oNm="Id"/>
    </RnmCh>
    <RnmCh ObjCls="Table" ParCls="Schema" ParNme="public" SupCls="" SupNme="">
      <Rnm nNm="beneficiarioNoExiste" oNm="beneficiario_NoExiste"/>
    </RnmCh>
  </RnmMgr>
  <DbDocOptionMgr>
    <BasicOptionMgr>
      <Name>db.doc.option.mgr</Name>
      <BoolOpt lbl="Diagrams" nm="doc.diagrams" on="1" spl="0"/>
      <BoolOpt lbl="Foreign Keys" nm="doc.fks" on="1" spl="0"/>
      <BoolOpt lbl="Indexes" nm="doc.indexes" on="1" spl="0"/>
      <BoolOpt lbl="Overwrite CSS File" nm="doc.overwrite.css" on="1" spl="0"/>
      <BoolOpt lbl="Procedures" nm="doc.procs" on="1" spl="0"/>
      <BoolOpt lbl="Schemas" nm="doc.schemas" on="1" spl="0"/>
      <BoolOpt lbl="Sequences" nm="doc.sequences" on="1" spl="0"/>
      <BoolOpt lbl="Tables" nm="doc.tables" on="1" spl="0"/>
      <BoolOpt lbl="Triggers" nm="doc.triggers" on="1" spl="0"/>
      <BoolOpt lbl="Views" nm="doc.views" on="1" spl="0"/>
    </BasicOptionMgr>
  </DbDocOptionMgr>
  <OpenEditors>
    <OpenEditor ClsNm="Diagram" fqn="null.diagramA" selected="1"/>
  </OpenEditors>
  <TreePaths>
    <TreePath/>
    <TreePath>/Schemas (2)</TreePath>
    <TreePath>/Schemas (2)/public</TreePath>
    <TreePath>/Schemas (2)/public/Tables (17)</TreePath>
    <TreePath>/Diagrams (1)</TreePath>
    <TreePath>/Diagrams (1)/diagramA</TreePath>
    <TreePath>/Diagrams (1)/diagramA/Notes (0)</TreePath>
    <TreePath>/Diagrams (1)/diagramA/Zones (0)</TreePath>
  </TreePaths>
  <SqlTexts/>
</Db>
